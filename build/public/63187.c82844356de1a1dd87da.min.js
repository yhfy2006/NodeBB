(self.webpackChunknodebb=self.webpackChunknodebb||[]).push([[63187],{63187:T=>{function l(e){const n=e.regex,a={$pattern:/[\w.\/]+/,built_in:["action","bindattr","collection","component","concat","debugger","each","each-in","get","hash","if","in","input","link-to","loc","log","lookup","mut","outlet","partial","query-params","render","template","textarea","unbound","unless","view","with","yield"]},A={$pattern:/[\w.\/]+/,literal:["true","false","undefined","null"]},d=/""|"[^"]+"/,R=/''|'[^']+'/,i=/\[\]|\[[^\]]+\]/,c=/[^\s!"#%&'()*+,.\/;<=>@\[\\\]^`{|}~]+/,b=/(\.|\/)/,_=n.either(d,R,i,c),m=n.concat(n.optional(/\.|\.\/|\//),_,n.anyNumberOfTimes(n.concat(b,_))),I=n.concat("(",i,"|",c,")(?==)"),t={begin:m},o=e.inherit(t,{keywords:A}),s={begin:/\(/,end:/\)/},g={className:"attr",begin:I,relevance:0,starts:{begin:/=/,end:/=/,starts:{contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,o,s]}}},O={begin:/as\s+\|/,keywords:{keyword:"as"},end:/\|/,contains:[{begin:/\w+/}]},E={contains:[e.NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,O,g,o,s],returnEnd:!0},C=e.inherit(t,{className:"name",keywords:a,starts:e.inherit(E,{end:/\)/})});s.contains=[C];const r=e.inherit(t,{keywords:a,className:"name",starts:e.inherit(E,{end:/\}\}/})}),N=e.inherit(t,{keywords:a,className:"name"}),S=e.inherit(t,{className:"name",keywords:a,starts:e.inherit(E,{end:/\}\}/})});return{name:"Handlebars",aliases:["hbs","html.hbs","html.handlebars","htmlbars"],case_insensitive:!0,subLanguage:"xml",contains:[{begin:/\\\{\{/,skip:!0},{begin:/\\\\(?=\{\{)/,skip:!0},e.COMMENT(/\{\{!--/,/--\}\}/),e.COMMENT(/\{\{!/,/\}\}/),{className:"template-tag",begin:/\{\{\{\{(?!\/)/,end:/\}\}\}\}/,contains:[r],starts:{end:/\{\{\{\{\//,returnEnd:!0,subLanguage:"xml"}},{className:"template-tag",begin:/\{\{\{\{\//,end:/\}\}\}\}/,contains:[N]},{className:"template-tag",begin:/\{\{#/,end:/\}\}/,contains:[r]},{className:"template-tag",begin:/\{\{(?=else\}\})/,end:/\}\}/,keywords:"else"},{className:"template-tag",begin:/\{\{(?=else if)/,end:/\}\}/,keywords:"else if"},{className:"template-tag",begin:/\{\{\//,end:/\}\}/,contains:[N]},{className:"template-variable",begin:/\{\{\{/,end:/\}\}\}/,contains:[S]},{className:"template-variable",begin:/\{\{/,end:/\}\}/,contains:[S]}]}}T.exports=l}}]);
