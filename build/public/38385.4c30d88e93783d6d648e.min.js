"use strict";(self.webpackChunknodebb=self.webpackChunknodebb||[]).push([[38385],{38385:(M,y,v)=>{v.r(y),v.d(y,{compare:()=>g,compareVersions:()=>$,satisfies:()=>d,validate:()=>T,validateStrict:()=>V});const x=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,a=t=>{if(typeof t!="string")throw new TypeError("Invalid argument expected string");const e=t.match(x);if(!e)throw new Error(`Invalid argument not valid semver ('${t}' received)`);return e.shift(),e},w=t=>t==="*"||t==="x"||t==="X",z=t=>{const e=parseInt(t,10);return isNaN(e)?t:e},k=(t,e)=>typeof t!=typeof e?[String(t),String(e)]:[t,e],E=(t,e)=>{if(w(t)||w(e))return 0;const[r,s]=k(z(t),z(e));return r>s?1:r<s?-1:0},o=(t,e)=>{for(let r=0;r<Math.max(t.length,e.length);r++){const s=E(t[r]||"0",e[r]||"0");if(s!==0)return s}return 0},$=(t,e)=>{const r=a(t),s=a(e),i=r.pop(),c=s.pop(),l=o(r,s);return l!==0?l:i&&c?o(i.split("."),c.split(".")):i||c?i?-1:1:0},g=(t,e,r)=>{O(r);const s=$(t,e);return A[r].includes(s)},A={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1],"!=":[-1,1]},Z=Object.keys(A),O=t=>{if(typeof t!="string")throw new TypeError(`Invalid operator type, expected string but got ${typeof t}`);if(Z.indexOf(t)===-1)throw new Error(`Invalid operator, expected one of ${Z.join("|")}`)},d=(t,e)=>{if(e=e.replace(/([><=]+)\s+/g,"$1"),e.includes("||"))return e.split("||").some(n=>d(t,n));if(e.includes(" - ")){const[n,C]=e.split(" - ",2);return d(t,`>=${n} <=${C}`)}else if(e.includes(" "))return e.trim().replace(/\s{2,}/g," ").split(" ").every(n=>d(t,n));const r=e.match(/^([<>=~^]+)/),s=r?r[1]:"=";if(s!=="^"&&s!=="~")return g(t,e,s);const[i,c,l,,I]=a(t),[j,u,m,,S]=a(e),h=[i,c,l],p=[j,u??"x",m??"x"];if(S&&(!I||o(h,p)!==0||o(I.split("."),S.split("."))===-1))return!1;const b=p.findIndex(n=>n!=="0")+1,f=s==="~"?2:b>1?b:1;return!(o(h.slice(0,f),p.slice(0,f))!==0||o(h.slice(f),p.slice(f))===-1)},T=t=>typeof t=="string"&&/^[v\d]/.test(t)&&x.test(t),V=t=>typeof t=="string"&&/^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/.test(t)}}]);
