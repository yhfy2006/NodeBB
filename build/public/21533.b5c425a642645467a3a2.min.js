(self.webpackChunknodebb=self.webpackChunknodebb||[]).push([[21533],{21533:b=>{function r(e){const s=e.regex,a={className:"number",relevance:0,variants:[{begin:/([+-]+)?[\d]+_[\d_]+/},{begin:e.NUMBER_RE}]},n=e.COMMENT();n.variants=[{begin:/;/,end:/$/},{begin:/#/,end:/$/}];const t={className:"variable",variants:[{begin:/\$[\w\d"][\w\d_]*/},{begin:/\$\{(.*?)\}/}]},i={className:"literal",begin:/\bon|off|true|false|yes|no\b/},c={className:"string",contains:[e.BACKSLASH_ESCAPE],variants:[{begin:"'''",end:"'''",relevance:10},{begin:'"""',end:'"""',relevance:10},{begin:'"',end:'"'},{begin:"'",end:"'"}]},E={begin:/\[/,end:/\]/,contains:[n,i,t,c,a,"self"],relevance:0},l=/[A-Za-z0-9_-]+/,g=/"(\\"|[^"])*"/,d=/'[^']*'/,o=s.either(l,g,d),_=s.concat(o,"(\\s*\\.\\s*",o,")*",s.lookahead(/\s*=\s*[^#\s]/));return{name:"TOML, also INI",aliases:["toml"],case_insensitive:!0,illegal:/\S/,contains:[n,{className:"section",begin:/\[+/,end:/\]+/},{begin:_,className:"attr",starts:{end:/$/,contains:[n,E,i,t,c,a]}}]}}b.exports=r}}]);
